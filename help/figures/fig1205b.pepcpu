// File: fig1205b.pepcpu
// Computer Systems, Fourth Edition
// Discussion following Figure 12.5
// Fetch the instruction specifier and increment PC by 1
// Combining cycles 1 and 3
// Shortest known implementation: 4 cycles, not counting restoration of C

UnitPre: PC=0x00ff, Mem[0x00ff]=0xabcd, C=0 
UnitPost: PC=0x0100, IR=0x00abcd, C=0 

// MAR <- PC, fetch instruction specifier.
1. A=6, B=7; MARCk 

// Save the status bits in T1
2. MemRead, CMux=0, C=11; LoadCk 
3. MemRead, MDRMux=0; MDRCk 
4. AMux=0, ALU=0, CMux=1, C=8; LoadCk 

// PC <- PC + 1, low-order byte first.
5. A=7, B=23, AMux=1, ALU=1, CMux=1, C=7; CCk, LoadCk 
6. A=6, B=22, AMux=1, ALU=2, CMux=1, C=6; LoadCk 

// ...
// Restore the carry bit from T1
7. A=11, AMux=1, ALU=15; CCk 
